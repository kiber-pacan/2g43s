#version 460
layout (local_size_x = 256) in;

struct MBO{
	mat4 model;
};

struct MDBO{
	vec4 pos;
	vec4 rot;
	vec4 scl;
};

mat4 quaternionToMatrix(vec4 q) {
    float x = q.x;
    float y = q.y;
    float z = q.z;
    float w = q.w;

    return mat4(
        1.0 - 2.0*(y*y + z*z), 2.0*(x*y - w*z), 2.0*(x*z + w*y), 0.0,
        2.0*(x*y + w*z), 1.0 - 2.0*(x*x + z*z), 2.0*(y*z - w*x), 0.0,
        2.0*(x*z - w*y), 2.0*(y*z + w*x), 1.0 - 2.0*(x*x + y*y), 0.0,
        0.0, 0.0, 0.0, 1.0
    );
}

layout(std430, binding = 0) readonly buffer MDB{
	MDBO objects[];
} mdb;

layout(std430, binding = 1) buffer MB{
	MBO objects[];
} mb;


void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= mb.objects.length()) return;

    mat4 mdl = mat4(1.0f);

    mdl[3][0] = mdb.objects[idx].pos.x;
    mdl[3][1] = mdb.objects[idx].pos.y;
    mdl[3][2] = mdb.objects[idx].pos.z;

    mdl[0][0] = mdb.objects[idx].scl.x;
    mdl[1][1] = mdb.objects[idx].scl.x;
    mdl[2][2] = mdb.objects[idx].scl.x;

    mat4 rotMat = quaternionToMatrix(mdb.objects[idx].rot);

    mb.objects[idx].model = mdl;
}